plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    // Adaptación de SonarQube
    id 'org.sonarqube' version '3.1.1'
    // Test de Cobertura
    id 'jacoco'
    id 'kotlin-parcelize'
    id 'org.owasp.dependencycheck'
}


// Sonar Qube
sonarqube {
    properties {
        property "sonar.java.projectName", "RickAndMortyDemo"
        property "sonar.host.url", "http://localhost:9000/"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.language", "kotlin"
        property "sonar.binaries", "build"
        property "sonar.sources", "src/main/java/"
        property "sonar.login", "admin"
        property "sonar.password", "Admin"
        property "sonar.tests", "src/test/java/"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/testDebugReleaseUnitTest.exec"
        property "sonar.junit.reportsPath", "${project.buildDir}/test-results/testDebugUnitTest"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
        property "sonar.coverage.exclusions",
                '*.json,'+
                        '**/R.class,'+
                        '**/R$*.class,'+
                        '**/BuildConfig.*,'+
                        '**/Manifest*.*,'+
                        '**/*Test*.*,'+
                        'android/**/*.*,'+
                        '**/*Fragment*.*,'+
                        '**/*Activity*.*,'+
                        '**/*Adapter*.*,'+
                        '**/*Factory*.*,'+
                        '**/ui/di/*,'+
                        '**/common/*,'+
                        '**/cache/*,'+
                        '**/databinding/*,'+
                        '**/data/models/*,' +
                        '**/*DialogBuilder*.*'
        property "sonar.exclusions",
                '*.json,'+
                        '**/R.class,'+
                        '**/R$*.class,'+
                        '**/BuildConfig.*,'+
                        '**/Manifest*.*,'+
                        '**/*Test*.*,'+
                        'android/**/*.*,'+
                        '**/*Factory*.*,'+
                        '**/databinding/*,'+
                        '**/data/models/*'
    }
}

// Configuración de Jacoco
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/*Fragment*.*',
                      '**/*Activity*.*',
                      '**/*Adapter*.*',
                      '**/*Factory*.*',
                      '**/ui/di/*',
                      '**/common/*',
                      '**/cache/*',
                      '**/databinding/*',
                      '**/data/models/*']
    def javaTree = fileTree(dir: "${buildDir}/intermediates/javac/debug/classes", excludes: fileFilter)
    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from(files([mainSrc]))
    classDirectories.from(files([debugTree, javaTree]))
    executionData.from(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))

}

// Analisis de dependencias externas
dependencyCheck {
    scanConfigurations = configurations.findAll {
        it.name.startsWithAny("implementation") ||
                it.name.contains("Implementation")
    }.collect {
        it.name
    }
}

tasks.check.dependsOn(tasks.dependencyCheckAnalyze)

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.rickandmortydemo"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled false
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures{
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'

    //MVVM, MOSHI, MOCKITO, RETROFIT
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.6.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    implementation "org.mockito:mockito-inline:3.2.0"
    implementation "android.arch.core:core-testing:1.1.1"
    implementation 'com.google.dagger:dagger:2.28.3'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    kapt 'com.google.dagger:dagger-compiler:2.15'




    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}